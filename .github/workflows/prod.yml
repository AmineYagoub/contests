name: Build Containers for Prod & Push to Dockerhub
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - dev

env:
  AUTH_TEST_TAG: amineyagoub/olympiad-auth:test
  CTS_TEST_TAG: amineyagoub/olympiad-contest:test
  GATEWAY_TEST_TAG: amineyagoub/olympiad-gateway:test
  AUTH_LATEST_TAG: amineyagoub/olympiad-auth:latest
  CTS_LATEST_TAG: amineyagoub/olympiad-contest:latest
  GATEWAY_LATEST_TAG: amineyagoub/olympiad-gateway:latest

jobs:
  build-and-deploy-contest:
    name: Build and Deploy contest
    runs-on: ubuntu-latest
    services:
      percona:
        image: percona
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: pass123
          MYSQL_DATABASE: olympiad
        ports:
          - 3306:3306
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/contest/Dockerfile
          load: true
          tags: ${{ env.CTS_TEST_TAG }}

      - name: Test CTS container
        run: |
          docker run -itd --network=${{ job.services.percona.network }} \
              -e DATABASE_URL=mysql://user:pass123@percona:3306/olympiad \
              -e WAIT_HOSTS=percona:3306 \
              --rm ${{ env.CTS_TEST_TAG }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/contest/Dockerfile
          push: true
          tags: ${{ env.CTS_LATEST_TAG }}

  build-and-deploy-gateway:
    name: Build and Deploy gateway
    runs-on: ubuntu-latest
    services:
      percona:
        image: percona
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: pass123
          MYSQL_DATABASE: olympiad
        ports:
          - 3306:3306
      contest:
        image: amineyagoub/olympiad-contest
        env:
          DATABASE_URL: mysql://user:pass123@percona:3306/olympiad
          WAIT_HOSTS: percona:3306
      auth:
        image: amineyagoub/olympiad-auth
        env:
          DATABASE_URL: mysql://user:pass123@percona:3306/olympiad
          WAIT_HOSTS: percona:3306

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/gateway/Dockerfile
          load: true
          tags: ${{ env.GATEWAY_TEST_TAG }}

      - name: Test GATEWAY container
        run: |
          docker run -itd --network=${{ job.services.percona.network }} \
            -e GATEWAY_CONTEST_SERVICE_HOST=http://contest:3001/graphql \
            -e GATEWAY_AUTH_SERVICE_HOST=http://auth:3003/graphql \
              --rm ${{ env.GATEWAY_TEST_TAG }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/gateway/Dockerfile
          push: true
          tags: ${{ env.GATEWAY_LATEST_TAG }}
