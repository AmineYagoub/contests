name: Build Containers for Prod & Push to Dockerhub
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - dev

env:
  AUTH_TEST_TAG: amineyagoub/olympiad-auth:test
  AUTH_LATEST_TAG: amineyagoub/olympiad-auth:latest

jobs:
  build-and-deploy-auth:
    name: Build and Deploy auth
    runs-on: ubuntu-latest
    container: ubuntu
    services:
      # Label used to access the service container
      percona:
        # Docker Hub PostgreSQL image
        image: percona
        # Provide the password for postgres
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: user
          MYSQL_PASSWORD: pass123
          MYSQL_DATABASE: olympiad
        ports:
          # Maps tcp port 5432 on service container to the host
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Verify DB exists
        run: mysql --host 127.0.0.1 --port 3306 -uroot -proot -e "SHOW DATABASES LIKE 'olympiad'"
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and export to Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/auth/Dockerfile
          load: true
          tags: ${{ env.AUTH_TEST_TAG }}
      - name: Test
        run: |
          docker run -e DATABASE_URL=mysql://user:pass123@127.0.0.1:3306/olympiad -e WAIT_HOSTS= 127.0.0.1:3306 --rm ${{ env.AUTH_TEST_TAG }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/auth/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.AUTH_LATEST_TAG }}
